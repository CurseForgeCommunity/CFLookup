@page "/{game}/{category}/{slug}"
@model WhatCurseForgeProjectIsThis.Pages.CFEmbedModel
@{
    ViewData["Title"] = "What?";

    var permLink = string.Empty;

    if (Model.FoundMod != null)
    {
        ViewData["Title"] = Model.FoundMod.Name;
        permLink = Url.PageLink($"/CFEmbed", values: new { game = Model.Game, category = Model.Category, slug = Model.Slug }, protocol: "https");
    }
}

@section Head {
<meta name="twitter:card" content="summary" />
    @if (Model.FoundMod != null)
    {
        var summaryText = new System.Text.StringBuilder();
var haveExtraLinebreak = false;
summaryText.AppendLine(Model.FoundMod.Summary);

if (!string.IsNullOrWhiteSpace(Model.FoundMod.Links?.IssuesUrl))
{
    summaryText.AppendLine();
    summaryText.AppendLine($"Issues: {Model.FoundMod.Links.IssuesUrl}");
    haveExtraLinebreak = true;
}

if (!string.IsNullOrWhiteSpace(Model.FoundMod.Links?.WikiUrl))
{
    if (!haveExtraLinebreak)
    {
        summaryText.AppendLine();
        haveExtraLinebreak = true;
    }
    summaryText.AppendLine($"Wiki/Docs: {Model.FoundMod.Links.WikiUrl}");
}

if (!string.IsNullOrWhiteSpace(Model.FoundMod.Links?.SourceUrl))
{
    if (!haveExtraLinebreak)
    {
        summaryText.AppendLine();
        haveExtraLinebreak = true;
    }
    summaryText.AppendLine($"Source: {Model.FoundMod.Links.SourceUrl}");
}

if (Model.FoundMod.LatestFilesIndexes?.Count > 0)
{
    var gameVersionList = new List<string>();
    var modloaderList = new List<string>();

    foreach (var file in Model.FoundMod.LatestFilesIndexes)
    {
        var modFile = Model.FoundMod.LatestFiles.FirstOrDefault(f => f.Id == file.FileId);
        if (modFile?.IsAvailable ?? false)
        {
            if(!string.IsNullOrWhiteSpace(file.GameVersion))
            {
                gameVersionList.Add(file.GameVersion);
            }
            if(!string.IsNullOrWhiteSpace(file.ModLoader?.ToString()))
            {
                modloaderList.Add(file.ModLoader?.ToString());
            }
        }
    }
    var gameVersions = string.Join(", ", gameVersionList.Distinct());
    var modLoaders = string.Join(", ", modloaderList.Distinct());

    if ((!string.IsNullOrWhiteSpace(gameVersions) || !string.IsNullOrWhiteSpace(modLoaders)) && !haveExtraLinebreak)
    {
        summaryText.AppendLine();
        haveExtraLinebreak = true;
    }

    if (!string.IsNullOrWhiteSpace(gameVersions))
    {
        summaryText.AppendLine($"Game version(s): {gameVersions}");
    }

    if (!string.IsNullOrWhiteSpace(modLoaders))
    {
        summaryText.AppendLine($"Modloader(s): {modLoaders}");
    }
}

<meta property="og:title" content="@Model.FoundMod.Name" />
<meta name="twitter:title" content="@Model.FoundMod.Name" />
        if (Model.FoundMod.Links != null && !string.IsNullOrWhiteSpace(Model.FoundMod.Links.WebsiteUrl))
        {
<meta property="og:url" content="@Model.FoundMod.Links.WebsiteUrl" />
        }
        if (Model.FoundMod.Logo != null && !string.IsNullOrWhiteSpace(Model.FoundMod.Logo.ThumbnailUrl))
        {
<meta property="og:image" content="@Model.FoundMod.Logo.ThumbnailUrl" />
<meta property="og:image:width" content="256" />
<meta property="og:image:height" content="256" />
<meta name="twitter:image" content="@Model.FoundMod.Logo.ThumbnailUrl" />
        }
<meta name="description" content="@summaryText.ToString().Trim()" />
<meta property="og:description" content="@summaryText.ToString().Trim()" />
<meta name="twitter:description" content="@summaryText.ToString().Trim()" />
<meta name="twitter:site" content="@@CurseForge">
    }
    else
    {
<meta property="og:title" content="@Model.Slug - Embed not available yet" />
<meta property="og:url" content="@permLink" />
<meta name="description" content="We could not find the information for the requested mod, or it is not available through the 3rd party API yet." />
<meta property="og:description" content="We could not find the information for the requested mod, or it is not available through the 3rd party API yet." />
<meta name="twitter:description" content="We could not find the information for the requested mod, or it is not available through the 3rd party API yet." />
<meta name="twitter:site" content="@@NoLifeKing85">
    }
}