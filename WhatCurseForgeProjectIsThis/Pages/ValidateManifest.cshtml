@page "{projectId:int}/{fileId:int}"
@using System.Web
@using Microsoft.AspNetCore.Html
@using Newtonsoft.Json
@model WhatCurseForgeProjectIsThis.Pages.ValidateManifestModel
@{
    ViewData["Title"] = "What?";

    if (Model.FoundMod != null)
    {
        ViewData["Title"] = Model.FoundMod.Name;
    }
}
<div class="text-center">
    <h1 class="display-4">CFLookup / What CurseForge Project Is This?</h1>
    @if (Model.FoundMod != null && Model.FoundFile != null && Model.Manifest != null)
    {
        @if (Model.FoundMod.Logo != null && !string.IsNullOrWhiteSpace(Model.FoundMod.Logo.ThumbnailUrl))
        {
            <img src="@Model.FoundMod.Logo.ThumbnailUrl" loading="lazy" alt="Project logotype" />
        }
        @if (Model.FoundMod.Links != null && !string.IsNullOrWhiteSpace(Model.FoundMod.Links.WebsiteUrl))
        {
            <h2><a href="@Model.FoundMod.Links.WebsiteUrl" class="text-white" target="_blank">@Model.FoundMod.Name</a> (@Model.Manifest.Version) <i class="bi bi-box-arrow-up-right"></i></h2>
        }
        else
        {
            <h2>@Model.FoundMod.Name</h2>
        }
        <p><i>@Model.FoundMod.Summary</i></p>
        <div class="row justify-content-center">
            <div class="col-md-6">
                <table class="table table-striped table-dark text-start table-bordered caption-top">
                    <caption>Project information</caption>
                    <tbody>
                        <tr>
                            <td><b>Author</b></td>
                            <td class="text-end">@Html.Raw(string.Join("<br />", Model.FoundMod.Authors.Select(c => "<a href=\"" + c.Url + "\" class=\"text-white\" target=\"_blank\">" + HttpUtility.HtmlEncode(c.Name) + "</a>")))</td>
                        </tr>
                        <tr>
                            <td><b>Status</b></td>
                            <td class="text-end">@Model.FoundMod.Status.ToString()</td>
                        </tr>
                        <tr>
                            <td><b>Mod Distribution</b></td>
                            <td class="text-end">@(Model.FoundMod.AllowModDistribution ?? true ? "Allowed" : "Not allowed")</td>
                        </tr>
                    </tbody>
                </table>
                <hr />
                <table class="table table-striped table-dark text-start table-bordered caption-top">
                    <caption>File information</caption>
                    <tbody>
                        <tr>
                            <td><b>Version</b></td>
                            <td class="text-end">@Model.Manifest.Version</td>
                        </tr>
                        <tr>
                            <td><b>Filename</b></td>
                            <td class="text-end">@Model.FoundFile.DisplayName</td>
                        </tr>
                        <tr>
                            <td><b>Release type</b></td>
                            <td class="text-end">@Model.FoundFile.ReleaseType.ToString()</td>
                        </tr>
                        <tr>
                            <td><b>Status</b></td>
                            <td class="text-end">@Model.FoundFile.FileStatus.ToString()</td>
                        </tr>
                        <tr>
                            <td><b>Game versions</b></td>
                            <td class="text-end">@string.Join(", ", Model.FoundFile.GameVersions)</td>
                        </tr>
                    </tbody>
                </table>
                <hr />
                @if (Model.UnavailableMods.Count > 0)
                {
                    <h4>Some mods needs manual downloading in 3rd party clients</h4>
                    <div class="row justify-content-center">
                        <div class="col-md-6">
                            <p class="text-muted"><em>See list below for which mods that need manual downloading</em></p>
                        </div>
                    </div>
                    <hr />
                    <table class="table table-striped table-dark text-start table-bordered caption-top">
                        <caption>Mods included in this modpack + dependencies</caption>
                        <tbody>
                            @foreach (var mod in Model.UnavailableMods)
                            {
                                <tr>
                                    <td class="text-center">
                                        @if (mod.Logo != null && !string.IsNullOrWhiteSpace(mod.Logo.ThumbnailUrl))
                                        {
                                            <img src="@mod.Logo.ThumbnailUrl" alt="Project logotype" loading="lazy" style="max-height: 28px;" />
                                        }
                                        else
                                        {
                                            <text>&nbsp;</text>
                                        }
                                    </td>
                                    <td><a href="@mod.Links.WebsiteUrl" class="text-white" target="_blank">@mod.Name</a></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <h4>This modpack can be downloaded by 3rd party clients</h4>
                    <div style="font-size: 1.2em; display: inline-block; width: unset; padding: 0.1em 1em;" class="cf-install-button" title="Install with CurseForge"><a href="curseforge://install?addonId=@Model.FoundMod.Id&fileId=@Model.FoundFile.Id" target="_blank">Install with CurseForge</a></div>
                    <hr />
                    @if (Model.FoundMod.Links != null && !string.IsNullOrWhiteSpace(Model.FoundMod.Links.WebsiteUrl))
                    {
                        <a href="@Model.FoundMod.Links.WebsiteUrl/relations/dependencies" target="_blank" class="text-white">Look at modpack modlist (on CurseForge)</a>
                    }
                }
            </div>
        </div>
    }
</div>